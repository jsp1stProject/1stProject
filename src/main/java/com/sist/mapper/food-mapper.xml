<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sist.mapper.food-mapper">
<select id="foodFindData" resultType="FoodVO" parameterType="hashmap"> 
 SELECT fno, name, poster, score, type, address, price, likecount, reviewcount, num
    FROM (
        SELECT fno, name, poster, score, type, address, price, likecount, reviewcount, rownum as num
        FROM (
            SELECT /*+ INDEX_ASC(food food_fno_pk) */ fno, name, poster, score, type, address, price, likecount, reviewcount
            FROM food
            WHERE
            <foreach collection="fdList" item="column" separator=" OR ">
                ${column} LIKE '%' || #{ss} || '%'
            </foreach>
        )
    )
    WHERE num BETWEEN #{start} AND #{end}
    </select>
  <select id="foodFindTotalPage" resultType="int" parameterType="hashmap">
    SELECT CEIL(COUNT(*) / 12.0)
    FROM food
    WHERE 
    <foreach collection="fdList" item="column" separator=" OR ">
        ${column} LIKE '%'||#{ss}||'%'
    </foreach>
  </select>
  <select id="foodFindTotalCount" resultType="int" parameterType="hashmap">
    SELECT COUNT(*) 
    FROM food
    WHERE 
    <foreach collection="fdList" item="column" separator=" OR ">
        ${column} LIKE '%' || #{ss} || '%'
    </foreach>
</select>

<!-- 상세보기 -->
  <select id="foodDetailData" resultType="FoodVO" parameterType="int">
    SELECT * FROM food
    WHERE fno=#{fno}
  </select>
  <update id="foodHitIncrement" parameterType="int">
    UPDATE food SET
    hit=hit+1
    WHERE fno=#{fno}
  </update>
  <!-- 리뷰 -->
  <select id="foodReviewListData" resultType="ReviewVO" parameterType="int">
    SELECT no,type,content_id,rate,user_id,message,TO_CHAR(regdate,'YYYY-MM-DD HH24:MI:SS') as dbday
    FROM review
    WHERE fno=#{fno}
    ORDER BY no ASC
    </select>
  <select id="foodReviewData" resultType="ReviewVO" parameterType="int">
    SELECT message
    FROM review
    WHERE no=#{no}
  </select>
  <select id="foodReviewCount" resultType="int" parameterType="int">
    SELECT COUNT(*) FROM review
    WHERE fno=#{fno}
  </select>
  <select id="adminFindData" resultType="FoodVO" parameterType="hashmap"> 
 SELECT fno, name, poster, score, type, address, price, likecount, reviewcount, num
    FROM (
        SELECT fno, name, poster, score, type, address, price, likecount, reviewcount, rownum as num
        FROM (
            SELECT /*+ INDEX_ASC(food food_fno_pk) */ fno, name, poster, score, type, address, price, likecount, reviewcount
            FROM food
            WHERE
            <foreach collection="fdList" item="column" separator=" OR ">
                ${column} LIKE '%' || #{ss} || '%'
            </foreach>
        )
    )
    WHERE num BETWEEN #{start} AND #{end}
    </select>
  <!-- 리뷰쓰기 -->
  <insert id="foodReviewInsert" parameterType="ReviewVO">
    INSERT INTO review (no, fno, type, user_id, message, regdate) 
    				VALUES(rv_no_seq.nextval, #{fno}, 4, #{user_id}, #{message}, SYSDATE)
  </insert>
  <delete id="foodReviewDelete" parameterType="int">
    DELETE FROM review 
    WHERE no=#{no}
  </delete>
  <update id="foodReviewUpdate" parameterType="ReviewVO">
    UPDATE review SET
    message=#{message}
    WHERE no=#{no}
  </update>
  
  <!-- 홈화면 -->
  <select id="foodMainHouseData5" resultType="FoodVO">
    SELECT * FROM (SELECT * FROM food 
      ORDER BY DBMS_RANDOM.RANDOM
    )
    WHERE rownum&lt;=5
  </select>
  
  <!-- admin page -->
  <select id="adminFoodListData" resultType="FoodVO" parameterType="hashmap">
    SELECT fno,name,poster,score,type,content,theme,phone,address,hit,likecount,reviewcount,num
    FROM (SELECT fno,name,poster,score,type,content,theme,phone,address,hit,likecount,reviewcount,rownum as num 
    FROM (SELECT /*+ INDEX_ASC(food food_fno_pk)*/fno,name,poster,score,type,content,theme,phone,address,hit,likecount,reviewcount
    FROM food))
    WHERE num BETWEEN #{start} AND #{end}
  </select>
  <select id="adminFoodTotalPage" resultType="int" parameterType="hashmap">
    SELECT CEIL(COUNT(*)/12.0) 
    FROM food
  </select>
  <select id="adminFoodDetailData" resultType="FoodVO" parameterType="int">
   SELECT fno,name,poster,type,content,theme,phone,address,hit
   FROM food
   WHERE fno=#{fno}
 </select>
 <insert id="adminFoodInsert" parameterType="FoodVO">
   <selectKey keyProperty="fno" resultType="int" order="BEFORE">
     SELECT NVL(MAX(fno)+1,1) FROM food
   </selectKey>
   INSERT INTO food(fno,name,type,phone,address,theme,poster,time,price,content) VALUES(
     #{fno},#{name},#{type},#{phone},#{address},#{theme},#{poster},#{time},#{price},#{content, jdbcType=CLOB}
   )
 </insert>
  <update id="adminFoodUpdate" parameterType="FoodVO">
   UPDATE food SET
   name=#{name},type=#{type},address=#{address},theme=#{theme},phone=#{phone},poster=#{poster},content=#{content}
   WHERE fno=#{fno}
 </update>
 <delete id="adminFoodDelete" parameterType="int">
   DELETE FROM food
   WHERE fno=#{fno}
 </delete>
 <!-- reservation page -->
 <insert id="foodReserve" parameterType="FoodReserveVO">
   INSERT INTO food_reserve (name,res_date, res_time, people, status, fno,user_id)
    VALUES (#{name},TO_DATE(#{res_date}, 'YYYY-MM-DD'), #{res_time}, #{people}, '예약완료', #{fno},#{user_id})
 </insert>
 <select id="foodReserveId" resultType="FoodVO">
   SELECT name FROM food WHERE fno=#{fno}
 </select>
</mapper>